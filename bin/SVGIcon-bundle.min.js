!function(t,e){var s,i=[];"function"==typeof define&&define.amd?define(i,e):"object"==typeof module&&module.exports?(s=function(t){return require(t)},module.exports=e.apply(t,i.map(s))):(s=function(e){return t[e]},t.SVGIcon=e.apply(t,i.map(s)))}("undefined"!=typeof self?self:this,function(){"use strict";Array.prototype.slice.call(arguments);const t={options:{separator:"-"},list:null,set(t,e){return this.list||(this.list=new Map),this.list.set(t,e)},remove(t){return!!this.list&&(this.list.delete(t),this.list.size||(this.list=null),!0)},has:function(t){return Boolean(this.list)&&this.list.has(t)},get:function(t){return this.list.get(t)}},e=document.createElementNS.bind(document,"http://www.w3.org/2000/svg");class s{add(t,e="push"){void 0===this._listeners&&(this._listeners=[]),this._listeners[e](t)}serveAll(t){if(void 0===this._listeners)return!0;let e;for(;e=this._listeners.shift();)t(e);this.clear()}clear(){Reflect.deleteProperty(this,"_listeners")}}const i=(t,e)=>t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e),n={options:{allow:!0,fit:"contain",size_variable:"--svg-icon-size"},is_created:!1,create(){if(!this.options.allow||this.is_created)return!1;const t=document.createElement("style");t.type="text/css";const{size_variable:e,fit:s}=this.options;t.innerHTML=`svg-icon { display: block; width: var(${e}, 1em); height: var(${e}, 1em); }`+`svg-icon svg { width: 100%; height: 100%; object-fit: ${s}; }`,document.head.appendChild(t),this.is_created=!0}};class o extends HTMLElement{static changeOptions({style:e,aliases:s}={}){e&&Object.assign(n.options,e),s&&Object.assign(t.options,s)}static get aliases(){return t}constructor(){this._icon=null,this._onmount_attributes=null,super(),n.create(),this._onmount_attributes=new s}renderIcon(){const t=e("svg"),s=e("use");return t.appendChild(s),this.appendChild(t),s}setIcon(e){if(!e||!this._icon)return!1;const{separator:s}=t.options,[n,...o]=e.split(s);i(this._icon,t.has(n)?t.get(n)+o.join(s):e)}connectedCallback(){this._icon=this.renderIcon(),this._onmount_attributes.serveAll(t=>this.attributeChangedCallback(...t))}disconnectedCallback(){this._icon=null,this._onmount_attributes=null}static get observedAttributes(){return["use"]}attributeChangedCallback(...t){const[e,s,i]=t;return s!==i&&"use"===e&&(this._icon?this.setIcon(i):this._onmount_attributes.add(t))}}return customElements.define("svg-icon",o),{SVGIcon:o}});